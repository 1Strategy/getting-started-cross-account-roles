AWSTemplateFormatVersion: 2010-09-09
Description: Configure cross account roles

Parameters:
  MasterAccountId:
    Type: String
    Description: AWS Account Id of the identity/federation account.
    MaxLength: 12
    MinLength: 12
  Environment:
    Type: String
    Description: Is the current AWS Account a Dev, Test, or Prod Environment
    Default: "dev"
    AllowedValues: ["test","dev","prod"]

Conditions:
  NotProductionEnvironment: !Not [!Equals [!Ref Environment, "prod"]]

Resources:
  NetworkAdminRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: NetworkAdminRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref MasterAccountId
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/NetworkAdministrator
  
  AWSAdminRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSAdminRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref MasterAccountId
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ReadOnlyRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref MasterAccountId
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess

  DeveloperRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DeveloperRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            AWS:
            - !Ref MasterAccountId
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
   
  DeveloperEC2Policy:
    Type: AWS::IAM::ManagedPolicy
    Condition: NotProductionEnvironment
    Properties:
      ManagedPolicyName: DeveloperEC2Policy
      Roles:
      - !Ref DeveloperRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: CreateSmallInstances
          Effect: Allow
          Action: 
          - ec2:StartInstances
          - ec2:RunInstances
          Resource: 'arn:aws:ec2:*:*:instance/*'
          Condition:
            StringEquals:
              ec2:InstanceType:
              - t2.nano
              - t2.micro
              - t2.small
              - t2.medium
              - t2.large   
            ForAnyValue:StringEqualsIfExists:
              ec2:Region: us-west-2            
        - Sid: AllowsDevelopersToOnlyManageInstancesCreatedByThem
          Effect: Allow
          Action:
          - ec2:RebootInstances
          - ec2:TerminateInstances
          - ec2:StartInstances
          - ec2:StopInstances
          Resource: "*"
          Condition:
            StringEquals:
              ec2:ResourceTag/PrincipalId: "${aws:userid}"
